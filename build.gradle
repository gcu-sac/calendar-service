plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.calender'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.projectlombok:lombok:1.18.22'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
}

jib {
        from {
                image = 'amazoncorretto:17-alpine-jdk'
        }
        to {
                image = 'yhc0818/sac-calendar:latest'
                tags = ['git rev-parse --verify --short HEAD'.execute().text.trim(), 'latest']
        }
        container {
                ports = ["8080"]
                jvmFlags = [
                        '-Dspring.profiles.active=prod',
                        '-XX:+UseContainerSupport',
                        '-Dserver.port=8080',
                        '-Dfile.encoding=UTF-8',
                        '-javaagent:/otel/opentelemetry-javaagent.jar',
                        '-Dotel.exporter=otel',
                        '-Dotel.service.name=backend-server',
                        '-Dotel.exporter.otlp.endpoint=http://grafana-agent.tempo.svc.cluster.local:4317',
                        '-Dotel.exporter.otlp.insecure=true',
                        '-Dlogging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG',
                        '-Dlogging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg traceID=%X{traceId} %n'
                ]
        }
}

tasks.named('test') {
	useJUnitPlatform()
}
